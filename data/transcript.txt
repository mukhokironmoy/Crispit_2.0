0:00:00 : before we get into the video let me just
0:00:02 : quickly explain how this video came
0:00:03 : about so recently I started working at a
0:00:06 : startup called webolite and through them
0:00:09 : I was introduced to Jacob from Clarity
0:00:11 : quarters and he proposed that he makes a
0:00:15 : tutorial video right here on CS dojo and
0:00:18 : when I asked my Twitter followers if
0:00:20 : it's something they want to see they
0:00:22 : basically said yes and that's why I
0:00:24 : decided to post it right here so let's
0:00:27 : just get started
0:00:28 : one thing that I find very useful about
0:00:30 : Python scripts is having some type of a
0:00:32 : script that can send you an alert or you
0:00:34 : can ping for information back now I've
0:00:36 : done this in videos with an SMS alert
0:00:38 : and different things like that but it
0:00:40 : either costs something or there's
0:00:42 : workarounds that are kind of country
0:00:43 : based that doesn't work for all the
0:00:45 : viewers so what we're going to do today
0:00:46 : is set up a telegram bot that does
0:00:48 : something similar in just a couple lines
0:00:50 : of python so if you don't have a
0:00:53 : telegram account you want to go ahead
0:00:54 : and sign up for one and you'll come to a
0:00:56 : kind of starting screen like this it's
0:00:58 : free so go ahead and grab it now we need
0:01:00 : to get an API key to work with telegram
0:01:02 : so we're going to search for bot father
0:01:04 : bot fathers telegram's official bot for
0:01:07 : handing out API keys so even though
0:01:09 : we're going to create our own custom bot
0:01:11 : we're going to get an API key from
0:01:13 : botfather you can see it'll show up here
0:01:16 : go ahead and click on that it says some
0:01:18 : things that this bot can do we're going
0:01:19 : to go ahead and hit start and you can
0:01:21 : see here the different things that that
0:01:24 : we can ask for here and there is a
0:01:28 : I think it's new but we'll just try it
0:01:30 : so you're gonna do Slash new bot
0:01:33 : and then it says what do you want to
0:01:34 : call it so you can pick whatever name
0:01:35 : you want this doesn't have to be unique
0:01:37 : so ours is going to be
0:01:39 : tutorial bot
0:01:42 : now this next one does have to be unique
0:01:44 : so it's going to say if the bot already
0:01:46 : exists and it has to end with bot so we
0:01:48 : can do our something like Clarity
0:01:52 : tutorial underscore bot and you got to
0:01:55 : remember it because we gotta find it
0:01:56 : later so
0:01:58 : you can see that that worked it was
0:02:00 : unique if it wasn't unique it's going to
0:02:02 : say that that bot already exists try and
0:02:03 : create another one and you can just pick
0:02:05 : a different bot name here so you can see
0:02:07 : now we have this HTTP API access token
0:02:11 : now you're gonna have to get your own so
0:02:13 : don't copy mine here
0:02:14 : and we are going to use that so you're
0:02:17 : going to go ahead and select that entire
0:02:20 : line here all the way over and then we
0:02:23 : can go ahead and minimize this
0:02:25 : now for our program here we're going to
0:02:29 : do it I'm gonna do it in replit for a
0:02:31 : couple of reasons one you can duplicate
0:02:33 : my code fully and run it in the exact
0:02:35 : same environment that I did
0:02:37 : you can also run this locally or however
0:02:39 : you want uh replit offers some paid
0:02:42 : packages to run the spot 24 7 and
0:02:44 : different things like that there's also
0:02:45 : some workarounds to run it 24 7 for free
0:02:48 : so that's that's the route we're gonna
0:02:50 : go here so you can set this up locally
0:02:52 : and follow the exact same steps I'm just
0:02:55 : going to do it in wrap lit there'll be a
0:02:57 : link in the description if you want to
0:02:58 : copy my code so we're going to go ahead
0:02:59 : and do create a new replit it's in
0:03:02 : Python obviously
0:03:03 : we're going to do telegram bot
0:03:07 : and then we can go ahead and add in
0:03:08 : we're going to add in one package that's
0:03:10 : going to help us work with that API so
0:03:11 : what we're going to do here is we're
0:03:13 : going to find our package so I clicked
0:03:15 : on this button there's a couple here
0:03:17 : options here for different apis that you
0:03:19 : can use the one I chose to use that
0:03:21 : worked really nicely with replit or
0:03:24 : whatever environment you're going to
0:03:26 : work with is pi telegram bot API and you
0:03:31 : can see it's in version 3.77 so in the
0:03:34 : future if this doesn't quite work you
0:03:35 : want to make sure you get the same
0:03:36 : version as me kind of hug that version
0:03:38 : but also make sure when you're searching
0:03:40 : for this package that you're not getting
0:03:43 : one of these others that aren't the
0:03:44 : right thing we're talking about this is
0:03:46 : like 0.0.4 so make sure you have the
0:03:49 : right bot now if you're in a different
0:03:50 : environment if you're in just your
0:03:52 : traditional local environment you can
0:03:53 : just do your pip install like you
0:03:55 : normally would
0:03:56 : so I'm going to go ahead and hit that
0:03:57 : plus button and it's going to install my
0:03:59 : package for me
0:04:00 : and we can go ahead and go back in our
0:04:02 : main project now if you're working with
0:04:03 : a free version of replit all these are
0:04:06 : going to be public the code that you're
0:04:08 : writing so you don't want to put your
0:04:09 : API key directly in the program itself
0:04:12 : so what we're going to do is we're going
0:04:13 : to add another file up here and we're
0:04:15 : going to call this dot EnV
0:04:18 : y now what that's going to do it's going
0:04:20 : to give us a private place to store that
0:04:21 : API key that isn't shared so I'm going
0:04:23 : to say API underscore key I'm going to
0:04:26 : do all capitals just because it's a
0:04:28 : constant and then I'm going to paste in
0:04:30 : that API key and then I can save this
0:04:34 : now to get that API key into our program
0:04:36 : we can actually import OS and then we
0:04:39 : can set our API key equal to os.get EnV
0:04:45 : NV
0:04:47 : and then just the key name so remember
0:04:49 : we call it API underscore key
0:04:53 : cool now we have our API key in our
0:04:55 : program as well
0:04:58 : we're also going to import telebot here
0:05:02 : perfect that's it so now we can go ahead
0:05:05 : and set up the basics of our bot I'm
0:05:06 : going to send you I'm going to set the
0:05:08 : most simplistic bot you can and a couple
0:05:10 : different things so I'm going to use
0:05:12 : Yahoo stocks to kind of pull in data
0:05:14 : just to showcasing you can use this for
0:05:16 : whatever data you're trying to pull in
0:05:18 : so I'm going to show you how to send a
0:05:20 : message to the bot and it sends
0:05:22 : something back to you sends information
0:05:23 : back to you so how the Bots work and
0:05:26 : we're going to start with just a reply
0:05:28 : so we're going to send it something it's
0:05:29 : going to reply the same thing back to us
0:05:31 : so we're going to do atbot Dot message
0:05:34 : underscore Handler so this is the kind
0:05:38 : of setup that handles the different
0:05:39 : commands that come into the bot we're
0:05:41 : going to look out for a command
0:05:43 : and the command that I want to look out
0:05:45 : for is greet so when we send a command
0:05:49 : of greet we want the bot to do something
0:05:51 : back and then you define your function
0:05:54 : of what you want to do right underneath
0:05:55 : that
0:05:56 : you can call this function whatever you
0:05:58 : want I'm going to mimic that from above
0:06:00 : and just call it greet I'm going to pass
0:06:02 : in our message so this is when it has a
0:06:06 : message that has a command of greet
0:06:07 : which I'll show you in a minute it's
0:06:08 : going to run this function and it's
0:06:10 : going to pass in the message as well now
0:06:13 : we can just do bot dot reply to
0:06:17 : we're going to reply to that message
0:06:22 : with hey how's it going so this is going
0:06:24 : to be our basic setup for the first
0:06:26 : couple lines of our bot here
0:06:30 : and also we don't want to forget to
0:06:32 : create our bot as well so we're going to
0:06:34 : say bot equals telebot
0:06:37 : dot telebot watch your capitalization
0:06:41 : here
0:06:42 : and then we're going to pass in our API
0:06:44 : key now we got to set this bot to keep
0:06:46 : looking out for messages as well so
0:06:48 : we're going to say bot dot pulling
0:06:51 : so this is going to keep checking for
0:06:53 : messages
0:06:54 : you could look up in the documentation
0:06:56 : I'm not sure how often it checks it
0:06:57 : seems pretty instant so I'm sure it's
0:06:59 : every couple seconds or whatever
0:07:01 : but that's fine for us so now that we
0:07:04 : have everything here we can go ahead and
0:07:05 : run this script
0:07:07 : you can see it doesn't do anything right
0:07:09 : because it's just it's just pulling for
0:07:11 : information but we haven't sent anything
0:07:12 : to our bot yet
0:07:14 : so the one thing that we need to do is
0:07:17 : start a conversation with our bot so
0:07:20 : ours was Clarity tutorial underscore bot
0:07:23 : so what I'm going to do is I'm going to
0:07:25 : search for that
0:07:27 : and you're you're going to search for
0:07:28 : whatever you named yours
0:07:31 : and you can see that here's our bot
0:07:33 : we're going to click on that we're going
0:07:35 : to start a conversation
0:07:37 : Now commands start with the slash symbol
0:07:40 : so you remember in our program now we
0:07:42 : don't have to do them all as commands
0:07:44 : but we set up the first kind of test as
0:07:46 : a slash greet so we're going to try that
0:07:49 : so we're gonna go slash greet
0:07:55 : and of course coding is really fun so
0:07:57 : you're
0:07:59 : commands really matter here this is
0:08:01 : commands with an S we'll change that
0:08:03 : let's stop this we'll restart our bot
0:08:08 : and pretend I didn't send like eight
0:08:10 : messages trying to figure that out
0:08:16 : and you can see that if we use the
0:08:18 : Correct capitalization we get the
0:08:20 : response that we are looking for here
0:08:21 : you can see it says hey how's it going
0:08:24 : which is what we typed as our response
0:08:27 : so we have a working bot set up here
0:08:31 : and this is how you're going to use
0:08:32 : commands to kind of get text into your
0:08:34 : Bot itself
0:08:36 : now you probably noticed that it used a
0:08:38 : reply line so it copied my message from
0:08:41 : above into the actual message it sent
0:08:44 : that's because we use the reply to one
0:08:47 : that you'll see that's very common is
0:08:49 : also to
0:08:51 : we'll copy this
0:08:54 : let's call this hello
0:08:58 : we'll say hello here if you say hello
0:09:01 : we'll call this function hello and
0:09:04 : instead of reply to let's do send
0:09:07 : message
0:09:08 : so what we can do is do send underscore
0:09:11 : message instead
0:09:14 : now this you it has to know what chat
0:09:17 : it's in so we need the chat ID now
0:09:20 : luckily we can get that off the message
0:09:22 : itself so we can do message.chat.id
0:09:27 : now if we stop this and run it now we
0:09:30 : should have a command that we can run
0:09:31 : with hello no capitals here
0:09:37 : you can see now it doesn't have the re
0:09:40 : it's not replying to a certain message
0:09:42 : it's just prompting to actually send
0:09:44 : that message cool so let's do something
0:09:46 : kind of useful now uh I wanted to use a
0:09:49 : library that I don't have to set up an
0:09:51 : API key or anything like that just for
0:09:53 : ease of use so if you want to Ping for
0:09:55 : different information follow along
0:09:56 : exactly with me here see how I do it
0:09:58 : from Yahoo and then Branch out and do
0:10:00 : whatever you want and make sure to share
0:10:02 : it so we can all see how you did it that
0:10:04 : sort of thing
0:10:06 : so I'm going to grab the Yahoo API here
0:10:10 : so I'm going to pull in Yahoo finance
0:10:13 : and then I'm going to walk you through a
0:10:15 : function that I created to grab
0:10:18 : the Wall Street bet stock so if you've
0:10:20 : been following Reddit and all the
0:10:21 : craziness with GameStop and different
0:10:23 : stocks like that I want to create a
0:10:25 : function that whenever I ping it it
0:10:27 : sends me the last three days worth of
0:10:30 : stock prices for their favorite stocks
0:10:32 : like AMC uh GameStop and Nokia
0:10:37 : so here's the function that I use to
0:10:40 : create this and we'll take a look at it
0:10:42 : here
0:10:44 : so what I did was I added another
0:10:46 : command function so we're going to have
0:10:48 : to use the Slash and WSB I'm going to
0:10:50 : show you how you can do something
0:10:51 : without a command next but we're going
0:10:53 : to do one more command here so this is
0:10:55 : slash WSB standing for Wall Street bets
0:10:58 : and what it does it runs this get stock
0:11:00 : function
0:11:01 : we're going to pull in a response that's
0:11:03 : just where I saved all my data back when
0:11:06 : I get responses and then you can choose
0:11:08 : whatever stocks you want to put in here
0:11:10 : I put the three Wall Street bet stocks
0:11:12 : that I see that are most popular with
0:11:13 : them
0:11:14 : then for each stock I'm pulling in data
0:11:17 : off of Yahoo so this is where I call the
0:11:20 : Yahoo finance API so I'm saying download
0:11:23 : the ticker and the ticker that I'm
0:11:25 : choosing is one of these three it's
0:11:27 : rotating through those each time it's
0:11:29 : getting a period of two days and it's
0:11:30 : giving you the one day price so that's
0:11:33 : the data I'm getting back that data is a
0:11:36 : panda's uh data frame that you can kind
0:11:37 : of check out and look at but essentially
0:11:39 : it's just going to have this data in it
0:11:41 : I'll show you a pop-up here to kind of
0:11:43 : show you what the data frame looks like
0:11:45 : we're going to reset that index so what
0:11:48 : that does instead of the date being the
0:11:49 : index is going to reset the index to be
0:11:51 : zero on the side and then we can pull
0:11:52 : the date out of that information so then
0:11:55 : my response is going to be the stock
0:11:57 : this is an F string so we're putting in
0:12:00 : the stock name
0:12:01 : and then we're going to append that to
0:12:02 : our stock data frame
0:12:04 : and then for each row so for each row of
0:12:07 : information for that stock we're going
0:12:09 : to pull out the close price and round it
0:12:11 : to two decimal points and we're going to
0:12:13 : format the date in month slash day so
0:12:16 : that's what we're doing on this line and
0:12:17 : then we're going to add that to our
0:12:19 : response append the stock price
0:12:23 : then just print out a blank line after
0:12:26 : each stock
0:12:28 : so now after we have all of our stocks
0:12:31 : information I do something a little
0:12:32 : special here I'm adding in some spacing
0:12:35 : just to make it look right on the output
0:12:37 : on telegram itself it gets all kind of
0:12:39 : jumbled up so what I'm doing here is I'm
0:12:42 : adding the column headers and I'm making
0:12:44 : sure that each of them have 10 spaces so
0:12:47 : they're kind of lined up and then I'm
0:12:50 : doing another 10 spaces for the next
0:12:52 : column another 10 spaces for the next
0:12:53 : column so we got the stock name the
0:12:55 : first date and then the most recent date
0:12:58 : and then I'm just simply sending that in
0:13:01 : a message in a response so that's it
0:13:02 : that's how we created that function
0:13:05 : now we can go ahead and stop this if we
0:13:07 : run it again then let's open up our
0:13:10 : emulator here and we'll do slash WSB
0:13:13 : whoops we in we installed some other
0:13:16 : libraries so we gotta wait until it
0:13:17 : actually starts running here I got a
0:13:19 : little impatient drink some coffee it's
0:13:21 : not tea I'm not sent Dex
0:13:24 : then you'll see that it still did run
0:13:26 : our function after we uh finally got the
0:13:28 : data it's printing out to console I just
0:13:30 : had that for some debugging and things
0:13:31 : like that but if you open up our
0:13:34 : tutorial bot you can see that when we
0:13:36 : send it slash WSB it sends us back a
0:13:40 : response with the data we requested so
0:13:43 : you can see here these are like the
0:13:44 : column headers it has stock 0331 and
0:13:48 : 0401 which is last two days the US
0:13:51 : market was open and then the stock
0:13:53 : prices for those stocks the formatting
0:13:55 : is a little weird because telegram's a
0:13:56 : little finicky about how things are
0:13:58 : structured so you can play with that a
0:14:00 : little bit and make it better I'm going
0:14:01 : to show you one more and that is how to
0:14:04 : not use a command so we don't want to
0:14:06 : use slash anymore say say you want to do
0:14:08 : something custom like you want to say
0:14:10 : some type of code so you want to say
0:14:12 : like stop a price space and then a stock
0:14:15 : name or something and then you want to
0:14:16 : get data back
0:14:18 : so here's the setup we're going to use
0:14:20 : for this next part it's a little
0:14:23 : different so we're going to use message
0:14:25 : Handler again but we're going to use the
0:14:26 : function keyword and then we're going to
0:14:28 : create a custom function
0:14:30 : now that custom function when it returns
0:14:33 : true then whatever's inside of here
0:14:35 : where I said pass that will run so your
0:14:39 : function is going to either return true
0:14:41 : or false based on the message and then
0:14:44 : if it's true it'll run whatever you want
0:14:46 : to create
0:14:48 : that might be a little confusing but
0:14:50 : we'll go ahead and walk through it here
0:14:52 : my function so this is to return true or
0:14:55 : false so this is to decide if this send
0:14:57 : price actually runs or not so our
0:15:01 : function that we want to control that is
0:15:02 : called stock request so what I wanted a
0:15:06 : stock request to look like I'll pull one
0:15:07 : up on the screen is to have price
0:15:10 : space and then a stock name so what we
0:15:14 : do here is we test to see if it's
0:15:16 : possible that this is a stock request so
0:15:18 : what I do right away is I do request I
0:15:21 : take the message and the text from the
0:15:23 : message and I split it and when you
0:15:25 : split with the default parameters it
0:15:27 : splits it based on Spaces
0:15:29 : so what it's going to do here is it's
0:15:31 : going to split it up into as many spaces
0:15:33 : as it has so if I say uh price space gme
0:15:37 : space hello world it doesn't matter the
0:15:40 : it's going to break it into those first
0:15:42 : two chunks so what I'm saying is the
0:15:44 : length of those chunks I have to have at
0:15:47 : least two right because if I have price
0:15:49 : space and then the stock name that's
0:15:52 : going to be two so I'm going to make
0:15:54 : sure it's at least of length two at
0:15:56 : least has one space in it
0:15:58 : then I'm going to take the request that
0:16:00 : first space I'm going to lower case it
0:16:03 : so in case you do price with a capital P
0:16:05 : it'll still work and I'm going to say if
0:16:08 : it's not in price
0:16:10 : so if it's not at least of a link to
0:16:13 : or if the first word isn't price we're
0:16:16 : going to return false because we don't
0:16:18 : want to run it
0:16:19 : anything else is going to return true so
0:16:21 : if it does have price as the first word
0:16:24 : and it does have at least two items in
0:16:28 : the message itself then we're gonna run
0:16:31 : send price
0:16:33 : so now we can fill out this function
0:16:35 : below here I'll copy pasta a little more
0:16:37 : and then walk you through it
0:16:40 : so remember we're doing something here
0:16:42 : that could cause an error if we weren't
0:16:44 : validating before this is only going to
0:16:46 : run if we have a zero index which is
0:16:49 : price and a one index of something so I
0:16:53 : can go ahead and safely try to grab out
0:16:55 : the one index because I know this
0:16:57 : wouldn't run if we didn't have a one
0:16:59 : index because we tested for it up here
0:17:02 : so my request is going to be the one
0:17:05 : index I know the price is at the zero
0:17:07 : index now what's at the one index we
0:17:09 : don't know we hope it's a stock ticker
0:17:12 : so if it isn't a stock ticker Yahoo is
0:17:15 : just going to return no data and we can
0:17:17 : send that back that we didn't recognize
0:17:18 : the stock symbol or whatever
0:17:20 : so what we're going to do here you can
0:17:22 : see instead of putting in a ticker I use
0:17:24 : whatever the user sent in request and
0:17:27 : I'm gonna get one minute data chunks and
0:17:31 : I'm gonna get five minutes worth of that
0:17:34 : data so essentially we're going to get
0:17:35 : the last one minute stock price of
0:17:38 : whatever ticker they want to put in
0:17:40 : so this could be useful like during the
0:17:42 : actual trading Day stuff like that
0:17:44 : so here's my check when I get that data
0:17:47 : back I'm making sure the size is greater
0:17:49 : than zero if the size is less than zero
0:17:51 : we're just going to send back that we
0:17:52 : didn't get any data if the size is
0:17:55 : greater than zero then we know we got
0:17:56 : some stock information back and we're
0:17:58 : going to go ahead and format that I'm
0:18:00 : going to do something very similar to
0:18:02 : what I did before so I won't break it
0:18:03 : down too much but I'm essentially making
0:18:05 : a format a date this time I do it a
0:18:07 : little differently because it's minute
0:18:08 : data instead of daily data so I'm going
0:18:10 : to pass back a month a day
0:18:13 : uh the 12 hour time frame and the
0:18:16 : minutes and then AM or PM I'm going to
0:18:19 : set the index blah blah and then
0:18:21 : eventually I'll send the message
0:18:23 : so let's go ahead and try this out so we
0:18:25 : can stop here
0:18:27 : we can run it again now remember we
0:18:30 : picked the format we could pick this to
0:18:32 : be whatever we want so we are going to
0:18:35 : start this command with price do space
0:18:37 : and then whatever we want to uh whatever
0:18:41 : we want to look up so let's try a new
0:18:44 : one let's get a popular one so we'll go
0:18:46 : price Tesla
0:18:48 : and you can see now we get a now you
0:18:51 : could have a nice title here or
0:18:52 : something that would have looked nicer
0:18:53 : now that I'm now that I'm looking at so
0:18:55 : we know we're looking at test layer but
0:18:57 : you can see we got the last five minutes
0:18:58 : worth of data now the Market's closed so
0:19:00 : we saw the actual last five minutes of
0:19:02 : the day uh if the if it was a live
0:19:05 : market you would see the last five
0:19:06 : minutes now but we got those prices here
0:19:09 : so let's try another one we'll say price
0:19:12 : some garbage
0:19:13 : and you can see that we got no data back
0:19:15 : because it wasn't a real stock symbol
0:19:17 : let's try one more so we're gonna say
0:19:19 : price
0:19:20 : gme and then this is my favorite stock
0:19:25 : so what's gonna happen here is it's
0:19:27 : gonna break up this and it's gonna still
0:19:29 : pass our validation right the first
0:19:31 : index well nope
0:19:33 : now it will the first index is price and
0:19:36 : then the second is going to be a stock
0:19:37 : ticker and it's going to ignore
0:19:38 : everything else in the statement so it
0:19:40 : is still going to give us back the data
0:19:42 : I hope and you can see that we did get
0:19:43 : our data back now if you like this video
0:19:45 : if you want us to do a couple more
0:19:47 : things with telegram we got a few more
0:19:48 : ideas here let us know in the comments
0:19:50 : what you want to see and we'll put it in
0:19:52 : the next video the one thing that you
0:19:54 : want to note here is if you're on a free
0:19:56 : account of replit this is going to fall
0:19:58 : asleep after a certain period of time if
0:20:00 : you're on a paid version of the account
0:20:02 : you can get a trial that you can go down
0:20:04 : to always on and turn this on and that
0:20:06 : will leave your Bot running 24 7. now
0:20:09 : there are some workarounds for this as
0:20:11 : well that I will show in the next
0:20:13 : telegram video
0:20:14 : along with anything else you would like
0:20:16 : me to show in the comments below give
0:20:19 : this a shot let me know what you think
0:20:20 : and until next time keep coding
